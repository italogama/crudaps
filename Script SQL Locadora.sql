-- MySQL Script generated by MySQL Workbench
-- Tue Jun  5 23:06:47 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`filmes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`filmes` (
  `id_filmes` INT NOT NULL COMMENT 'chave primaria da tabela filmes, atributo que armazena o id de um filme',
  `titulo` VARCHAR(45) NOT NULL COMMENT 'atributo que armazena o título de um filme',
  `categoria` VARCHAR(20) NOT NULL COMMENT 'atributo que armazena a categoria dada ao filme',
  PRIMARY KEY (`id_filmes`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`fitas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`fitas` (
  `id_fitas` INT NOT NULL COMMENT 'chave primaria da tabela fitas, atributo que armazena o número da fita',
  `quantidade` int NOT NULL COMMENT 'atributo que armazena a quantidade de fitas armazenada',
  `filmes_idfilmes` INT NOT NULL COMMENT 'chave estrangeira da tabela filmes. Possui os mesmos dados de id_filmes de filmes.',
  PRIMARY KEY (`id_fitas`, `filmes_idfilmes`),
  INDEX `fk_fitas_filmes_idx` (`filmes_idfilmes` ASC),
  CONSTRAINT `fk_fitas_filmes`
    FOREIGN KEY (`filmes_idfilmes`)
    REFERENCES `mydb`.`filmes` (`id_filmes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`clientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`clientes` (
  `cpf` VARCHAR(11) NOT NULL COMMENT 'chave primaria da tabela Cliente, atributo que armazena o CPF do cliente',
  `nome` VARCHAR(45) NOT NULL COMMENT 'atributo que armazena o nome do cliente',
  `sexo` ENUM('M', 'F') NOT NULL COMMENT 'atributo que armazena o sexo do cliente',
  `nascimento` DATE NOT NULL COMMENT 'atributo que armazena a data de nascimento do cliente',
  PRIMARY KEY (`cpf`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`dependenteDaily Implantação de Jira - com Curado (apper.in)`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`dependenteDaily Implantação de Jira - com Curado (apper.in)` (
  `cpf` VARCHAR(11) NOT NULL COMMENT 'chave primaria da tabela Dependentes, atributo que armazena o CPF do dependente',
  `nome` VARCHAR(45) NOT NULL COMMENT 'atributo que armazena o nome do dependente',
  `sexo` ENUM('M', 'F') NOT NULL COMMENT 'atributo que armazena o sexo do dependente',
  `nascimento` DATE NOT NULL COMMENT 'atributo que armazena a data de nascimento do dependente',
  `clientes_cpf` VARCHAR(11) NOT NULL COMMENT 'chave estrangeira da tabela cliente. Possui os mesmos dados de cpf de clientes.',
  PRIMARY KEY (`cpf`, `clientes_cpf`),
  INDEX `fk_dependenteDaily Implantação de Jira - com Curado (appe_idx` (`clientes_cpf` ASC),
  CONSTRAINT `fk_dependenteDaily Implantação de Jira - com Curado (apper.1`
    FOREIGN KEY (`clientes_cpf`)
    REFERENCES `mydb`.`clientes` (`cpf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`atores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`atores` (
  `cpf` VARCHAR(11) NOT NULL COMMENT 'chave primaria da tabela atores, atributo que armazena o CPF do Ator',
  `nome` VARCHAR(45) NOT NULL COMMENT 'atributo que armazena o nome do ator',
  `sexo` ENUM('M', 'F') NOT NULL COMMENT 'atributo que armazena o sexo do ator',
  `nascimento` DATE NOT NULL COMMENT 'atributo que armazena a data de nascimento do ator',
  PRIMARY KEY (`cpf`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`locacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`locacao` (
  `fitas_id_fitas` INT NOT NULL AUTO_INCREMENT,
  `fitas_filmes_idfilmes` INT NOT NULL,
  `clientes_cpf` VARCHAR(11) NOT NULL,
  `data_locacao` DATE NOT NULL COMMENT 'atributo que armazena a data em que a fita foi locada',
  `data_devolucao` DATE NOT NULL COMMENT 'atributo que armazena a data em que a fita deve ser devolvida',
  `data_devolvida` DATE NOT NULL COMMENT 'atributo que armazena a data em que a fita foi devolvida a loja',
  PRIMARY KEY (`fitas_id_fitas`, `fitas_filmes_idfilmes`, `clientes_cpf`),
  INDEX `fk_fitas_has_clientes_clientes1_idx` (`clientes_cpf` ASC),
  INDEX `fk_fitas_has_clientes_fitas1_idx` (`fitas_id_fitas` ASC, `fitas_filmes_idfilmes` ASC),
  CONSTRAINT `fk_fitas_has_clientes_fitas1`
    FOREIGN KEY (`fitas_id_fitas` , `fitas_filmes_idfilmes`)
    REFERENCES `mydb`.`fitas` (`id_fitas` , `filmes_idfilmes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fitas_has_clientes_clientes1`
    FOREIGN KEY (`clientes_cpf`)
    REFERENCES `mydb`.`clientes` (`cpf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`filmes_estrelados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`filmes_estrelados` (
  `id_filmes_estrelados` INT NOT NULL AUTO_INCREMENT COMMENT 'chave primaria da tabela filmes_estrelados, atributo que armazena o id de uma filme estrelado',
  `filmes_id_filmes` INT NOT NULL COMMENT 'chave estrangeira vindo da tabela filmes, possui os mesmos dados de id_filmes de filmes',
  `atores_cpf` VARCHAR(11) NOT NULL COMMENT 'chave estrangeira vindo da tabela atores, possui os mesmos dados de cpf de atores',
  `nome_personagem` VARCHAR(45) NOT NULL COMMENT 'Nome do ator no filme em que ele estrelou',
  PRIMARY KEY (`id_filmes_estrelados`, `filmes_id_filmes`, `atores_cpf`),
  INDEX `fk_filmes_has_atores_atores1_idx` (`atores_cpf` ASC),
  INDEX `fk_filmes_has_atores_filmes1_idx` (`filmes_id_filmes` ASC),
  CONSTRAINT `fk_filmes_has_atores_filmes1`
    FOREIGN KEY (`filmes_id_filmes`)
    REFERENCES `mydb`.`filmes` (`id_filmes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_filmes_has_atores_atores1`
    FOREIGN KEY (`atores_cpf`)
    REFERENCES `mydb`.`atores` (`cpf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- Incersão de dados na tabela--

insert into atores (cpf,nome,sexo,nascimento)
values
('41298753880','Eduardo José de Lima','M','1997-04-21'),
('02643602498','Maria José Teixeira de Lima','F','1979-12-07');

insert into clientes (cpf,nome,sexo,nascimento)
values
('04901519492','Aline Nigro Peixeito Lara Loureiro','F','1996-12-21'),
('65285412360','Joselito Antonio da Silva','M','1964-02-25');

insert into dependente (cpf,nome,sexo,nascimento,clientes_cpf)
values
('12345678910','Ana Amelia Rodrigues','F','1997-01-03','04901519492'),
('01987654321','Anderson Manoel Felipe','M','1995-05-05','65285412360');

insert into filmes (id_filmes,titulo,categoria)
values
('984984','As aventuras de PI','Drama/Fantasia'),
('789432','Vingadores: Guerra Infinita','ficção científica');

insert into filmes_estrelados (filmes_id_filmes,atores_cpf,nome_personagem)
values
('984984','41298753880','PI Pastel'),
('789432','02643602498','Viuva Negra');

insert into fitas (id_fitas,quantidade,filmes_idfilmes)
values
('265198',1,'984984'),
('561699',2,'789432');

insert into locacao (fitas_id_fitas,fitas_filmes_idfilmes,clientes_cpf, data_locacao,data_devolucao,data_devolvida)
values
('265198','984984','04901519492','2018-06-06','2018-06-13','2018-06-12'),
('561699','789432','65285412360','2018-06-06','2018-06-13','2018-06-25');

